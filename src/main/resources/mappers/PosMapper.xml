<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scit36a2.minnano.dao.PosDAO">

	<insert id="insertSasSad" parameterType="HashMap">
insert all
	into SALES_STATE values	(
		sales_state_seqs.nextval,
		1,
		1,
		sysdate,
		sysdate+1,
		#{sales_visitors},
		#{sales_memo}
	)
	into SALES_DETAIL values	(
		sales_detail_seqs.nextval,
		sales_state_seqs.currval,
		#{menu_seq},
		1,
		0
	)	select * from dual
	</insert>
	
		
<select id="selectPOSone" resultType="HashMap" parameterType="int">
	select  sea.seat_seq, sea.seat_id, 
       	    sas.sales_memo, 
            sad.menu_seq, sad.sales_order
from seat sea
left outer join SALES_STATE sas on sea.comp_seq = sas.comp_seq
left outer join sales_detail sad on sas.sales_state_seq = sad.sales_state_seq
</select>

<select id="selectPOStwo" resultType="HashMap" parameterType="int">
select
   sas.seat_seq, sas.sales_visitors, sas.sales_start, sas.sales_end,
   me.menu_seq, me.menu_name, sad.sales_order, me.menu_price, me.menu_category,
   sas.sales_memo, sad.sales_discount
from menu me
left outer join sales_state sas on me.comp_seq = sas.comp_seq
left outer join sales_detail sad on sas.SALES_STATE_SEQ = sad.sales_state_seq

</select>
	
	<delete id="deleteSasSadPay" parameterType="sas">
		delete from sales_state
		where comp_seq = #{comp_seq}
	</delete>
	
	<update id="updatePOStwo" parameterType="sas">
		begin for cs in (
			select sas.sales_memo sas_sales_memo, sas.sales_visitors sas_sales_visitors, sad.sales_discount sad_sales_discount, sad.sales_order sad_sales_order, sad.menu_seq sad_menu_seq
			from sales_state sas, sales_detail sad
			where sas.sales_state_seq = sad.sales_state_seq
			) loop
			update sales_state set sales_memo = #{sales_memo},
                       sales_visitors = #{sales_visitors}
        	where sales_memo = cs.sas_sales_memo and sales_visitors = cs.sas_sales_visitors
		update sales_detail set sales_discount = #{sales_discount},
                        sales_order = #{sales_order},
                        menu_seq = #{menu_seq}
              where sales_discount = cs.sad_sales_discount and sales_order = cs.sad_sales_order and menu_seq = cs.sad_menu_seq
              end loop
              end
	</update>

	<insert id="insertPayment" parameterType="pmt">
		insert into payment	(
			payment_seq,
			sales_state_seq,
			payment_type,
			payment_amount,
			payment_time,
			payment_clerk
		)		values	(
			payment_seqs.nextval,
			#{sales_state_seq},
			#{payment_type},
			#{payment_amount},
			sysdate,
			#{payment_clerk}
		)
	</insert>
</mapper>
