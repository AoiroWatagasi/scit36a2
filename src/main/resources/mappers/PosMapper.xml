<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scit36a2.minnano.dao.PosDAO">

	<select id="seatsavailable" parameterType="int" resultType="sas">
		SELECT *
		FROM sales_state
		WHERE comp_seq = #{comp_seq} and sales_end > sysdate
	</select>

	
	<insert id="insertSasSad" parameterType="HashMap">
insert all
	into SALES_STATE values	(
		sales_state_seqs.nextval,
		1,
		1,
		sysdate,
		sysdate+1,
		#{sales_visitors},
		#{sales_memo}
	)
	into SALES_DETAIL values	(
		sales_detail_seqs.nextval,
		sales_state_seqs.currval,
		#{menu_seq},
		1,
		0
	)	select * from dual
	</insert>
			
<select id="selectPOSone" resultType="HashMap" parameterType="int">
	select  sea.seat_seq, sea.seat_id, 
       	    sas.sales_memo, 
            sad.menu_seq, sad.sales_order
from seat sea
left outer join SALES_STATE sas on sea.comp_seq = sas.comp_seq
left outer join sales_detail sad on sas.sales_state_seq = sad.sales_state_seq
</select>

<select id="selectPOStwo" resultType="HashMap" parameterType="int">
select
   sas.seat_seq, sas.sales_visitors, sas.sales_start, sas.sales_end,
   me.menu_seq, me.menu_name, sad.sales_order, me.menu_price, me.menu_category,
   sas.sales_memo, sad.sales_discount
from menu me
left outer join sales_state sas on me.comp_seq = sas.comp_seq
left outer join sales_detail sad on sas.SALES_STATE_SEQ = sad.sales_state_seq

</select>
	
	<delete id="deleteSasSadPay" parameterType="sas">
		delete from sales_state
		where comp_seq = #{comp_seq}
	</delete>
	
	<update id="updatePOStwo" parameterType="sas"><!-- 한번의 입력을 받아(sales_state_seq) 두개의 테이블에 있는 데이터를 수정(sales_memo,sales_visitors,sales_discount,sales_order,menu_seq)하는 구문입니다. 필요하지 않으실수도 있겠지만 어느것이 수정이 필요한지 몰라 수정할만한 것을 임의적으로 생각해봤습니다. -->
		begin for cs in (
			select sas.sales_memo sas_sales_memo, sas.sales_visitors sas_sales_visitors, sad.sales_discount sad_sales_discount, sad.sales_order sad_sales_order, sad.menu_seq sad_menu_seq
			from sales_state sas, sales_detail sad
			where sas.sales_state_seq = sad.sales_state_seq
			) loop
			update sales_state set sales_memo = #{sales_memo},
                       sales_visitors = #{sales_visitors}
        	where sales_memo = cs.sas_sales_memo and sales_visitors = cs.sas_sales_visitors
		update sales_detail set sales_discount = #{sales_discount},
                        sales_order = #{sales_order},
                        menu_seq = #{menu_seq}
              where sales_discount = cs.sad_sales_discount and sales_order = cs.sad_sales_order and menu_seq = cs.sad_menu_seq
              end loop
              end
	</update>

	<insert id="insertPayment" parameterType="pmt">
		insert into payment	(
			payment_seq,
			sales_state_seq,
			payment_type,
			payment_amount,
			payment_time,
			payment_clerk
		)		values	(
			payment_seqs.nextval,
			#{sales_state_seq},
			#{payment_type},
			#{payment_amount},
			sysdate,
			#{payment_clerk}
		)
	</insert>

	
	<resultMap type="hashmap" id="testresult">
		<result property="payment_seq" column="payment_seq"/>
  		<result property="sales_state_seq" column="sales_state_seq"/>
  		<result property="payment_type" column="payment_type"/>
  		<result property="payment_amount" column="payment_amount"/>
  		<result property="payment_time" column="payment_time"></result>
	</resultMap>
	<select id="testtest" parameterType="int" resultMap="testresult">
		SELECT
	    	p.payment_seq as 'payment_seq'
	    	, s.sales_state_seq as 'sales_state_seq'
	    	, p.payment_type as 'payment_type'
	    	, p.payment_amount as 'payment_amount'
	    	, to_char(p.payment_time, 'YYYY-MM-DD HH24:mi:ss') as 'payment_time'
    	FROM 
    		payment p
        	LEFT OUTER JOIN sales_detail d ON p.SALES_STATE_SEQ = d.SALES_STATE_SEQ
        	LEFT OUTER JOIN sales_state s ON p.sales_state_seq = s.sales_state_seq
        
        <![CDATA[
        WHERE 
        	payment_time <= to_date('2019-03-26 11:59:59', 'YYYY-MM-DD HH24:mi:ss') and comp_seq = #{comp_seq}
       	]]>
	</select>
<!-- 	
  	<resultMap id="sales_state" type="sas">
  	<result property="comp_seq" column="comp_seq"></result>
  	</resultMap>
  	<resultMap id="Payment" type="pmt">
  		<result property="payment_seq" column="payment_seq"/>
  		<result property="sales_state_seq" column="sales_state_seq"/>
  		<result property="payment_type" column="payment_type"/>
  		<result property="payment_amount" column="payment_amount"/>
  		<result property="payment_time" column="payment_time"></result>
  		<collection property="sales_state" resultMap="pmt"></collection>
  	</resultMap>
  	<resultMap id="sales_detail" type="sad">
  	</resultMap>
  	
  	<select id="selectPaymentList" resultMap="T_payment" parameterType="com">
  	select
    	p.payment_seq as 'payment_seq'
    	, s.sales_state_seq as 'sales_state_seq'
    	, p.payment_type as 'payment_type'
    	, p.payment_amount as 'payment_amount'
    	, to_char(p.payment_time as 'payment_time', 'YYYY-MM-DD HH24:mi:ss') payment_time
    FROM payment p
        LEFT OUTER JOIN sales_detail d ON p.SALES_STATE_SEQ = d.SALES_STATE_SEQ
        LEFT OUTER JOIN sales_state s ON p.sales_state_seq = s.sales_state_seq
        <![CDATA[
 		WHERE payment_time <= to_date('2019-03-26 11:59:59', 'YYYY-MM-DD HH24:mi:ss') and comp_seq = #{comp_seq}
 		]]>  		
  	</select>
 -->

<insert id="insertCashonhand" parameterType="coh">
insert into cashonhand	(
cashonhand_seq,
comp_seq,
cashonhand_type,
cashonhand_register,
cashonhand_regdate,
cashonhand_error,
cashonhand_cash
)	values	(
cashonhand_seqs.nextval,
#{comp_seq},
#{cashonhand_type},
#{cashonhand_register},
sysdate,
#{cashonhand_error},
#{cashonhand_cash}
)
</insert>
<select id="selectCashonhand" resultType="coh" parameterType="coh">
	select 
		cashonhand_seq,
		comp_seq,
		cashonhand_type,
		cashonhand_register,
		cashonhand_regdate,
		cashonhand_error,
		cashonhand_cash
	from
		cashonhand
	where
		comp_seq = #{comp_seq}
</select>
<select id="selectCashOne" resultType="coh" parameterType="coh">
	select 
		CASHONHAND_SEQ, 
		COMP_SEQ, 
		CASHONHAND_TYPE, 
		CASHONHAND_REGISTER, 
		CASHONHAND_REGDATE, 
		CASHONHAND_ERROR, 
		CASHONHAND_CASH
from 
	CASHONHAND 
where 
	CASHONHAND_TYPE = 1 
and 
	CASHONHAND_REGDATE like sysdate
		

</select>


<delete id="deleteCashonhand" parameterType="coh">
	delete from 
			cashonhand
		where 
			cashonhand_seq = #{cashonhand_seq}
</delete>

<select id="predictCash" parameterType="int" resultType="hashmap">
	SELECT * FROM CASHONHAND WHERE comp_seq = #{param} and CASHONHAND_REGDATE like sysdate
</select>

<select id="predictPmtCash" parameterType="int" resultType="int">
select  
	sum(payment_amount)
from 
	payment p
left join SALES_STATE s on p.sales_state_seq = s.sales_state_seq
where 
	comp_seq = #{comp_seq}
</select>

</mapper>
  
	
