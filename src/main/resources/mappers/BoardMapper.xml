<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scit36a2.minnano.dao.BoardDAO">

	<select id="boardCount" resultType="int">
		SELECT COUNT(*) FROM board
	</select>

	<!-- 게시글 조회 -->
	<select id="boardList" resultType="hashmap" parameterType="map">
		select
		b.board_seq,
		e.emp_name as emp_seq,
		b.board_category,
		b.board_title,
		b.board_content,
		b.board_orgname,
		b.board_savname,
		b.board_regdate,
		b.board_hitcount
		from
		board b
		left join employee e on
		b.emp_seq = e.emp_seq
		WHERE
		<choose>
			<when test="searchItem=='title'">BOARD_TITLE</when>
			<when test="searchItem=='userid'">EMP_NAME</when>
			<when test="searchItem=='content'">BOARD_CONTENT</when>
		</choose>
		LIKE '%' || #{searchWord} ||'%'
		ORDER BY
		BOARD_SEQ DESC
	</select>

	<insert id="insertBoard" parameterType="bo">
		INSERT INTO BOARD
		(
		board_seq
		, emp_seq
		, board_category
		, board_title
		, board_content
		,
		board_orgname
		, board_savname
		)
		VALUES
		(
		board_seqs.nextval
		, #{emp_seq}
		,
		#{board_category}
		, #{board_title}
		, #{board_content}
		, #{board_orgname}
		, #{board_savname}
		)
	</insert>

	<update id="incrementHitcount" parameterType="int">
		update board
		set
		board_hitcount = board_hitcount+1
		where board_seq = #{board_seq}
	</update>

	<select id="selectOne" parameterType="int" resultType="bo">
		SELECT
		board_seq
		, emp_seq
		, board_category
		, board_title
		, board_content
		, board_hitcount
		, to_char(board_regdate, 'YYYY-MM-DD') as board_regdate
		, board_orgname
		, board_savname
		FROM board
		WHERE
		board_seq = #{board_seq}
		ORDER BY
		BOARD_SEQ DESC
	</select>

	<!-- boardDetail에서 id를 뽑아주기 위한 것. -->
	<select id="getEmpId" resultType="String" parameterType="int">
		select
			distinct e.emp_name
		from
			board b
			left join employee e on b.emp_seq = e.emp_seq
		where
			board_seq = #{board_seq}
	</select>

	<select id="selectComment" resultType="cmt" parameterType="cmt">
		select
		board_comments_seq,
		board_seq,
		board_comments_writer,
		board_comments_content,
		board_comments_regdate
		from
		BOARD_COMMENTS
		where
		board_seq = #{board_seq}
		order by
		board_comments_seq desc
	</select>

	<delete id="boardDelete" parameterType="bo">
		DELETE board
		WHERE
		board_seq = #{board_seq}
		and
		emp_seq = #{emp_seq}
	</delete>

	<update id="boardUpdate" parameterType="bo">
		UPDATE board
		SET
		board_title = #{board_title}
		, board_content =
		#{board_content}
		, board_regdate = sysdate
		<if test="board_orgname != null">
			, board_orgname = #{board_orgname}
			, board_savname =
			#{board_savname}
		</if>
		WHERE
		board_seq = #{board_seq}
		and
		emp_seq = #{emp_seq}
	</update>

	<insert id="inputComment" parameterType="cmt">
		insert into
		BOARD_COMMENTS (
		BOARD_COMMENTS_SEQ,
		BOARD_SEQ,
		BOARD_COMMENTS_WRITER,
		BOARD_COMMENTS_CONTENT,
		BOARD_COMMENTS_REGDATE
		) values (
		board_comments_seqs.nextval,
		#{board_seq},
		#{board_comments_writer},
		#{board_comments_content},
		sysdate
		)
	</insert>

	<delete id="deleteComment" parameterType="cmt">
		delete from
		BOARD_COMMENTS
		where
		board_comments_seq = #{board_comments_seq}
	</delete>

	<update id="updateComment" parameterType="cmt">
		update
		BOARD_COMMENTS
		set
		BOARD_COMMENTS_CONTENT = #{board_comments_content}
		where
		board_comments_seq = #{board_comments_seq}
	</update>

	<select id="selectCmtOne" parameterType="cmt" resultType="cmt">
		SELECT
			*
		FROM
			board_comments
		WHERE
			board_comments_seq = #{board_comments_seq}
	</select>
	
	<update id="deleteFile" parameterType="int">
		UPDATE board
		SET
		board_orgname = null,
		board_savname = null
		WHERE
		board_seq=#{board_seq}
	</update>
	
	<select id="selectCompseq" parameterType="HashMap" resultType="HashMap">
	 select e.comp_seq 
	 from employee e,board b 
	 where e.emp_seq=#{emp_seq} 
	</select>
	<select id="insertReport" parameterType="HashMap" resultType="HashMap">
		      SELECT
			to_char(min(payment_time), 'YYYY-MM') as monthtime
			, sum(payment_amount) as payment_amount_sum
			, sum(sales_order) as sales_order_sum
		FROM
			(
			SELECT
				p.payment_time as payment_time, p.payment_amount as payment_amount, s.comp_seq as
				comp_seq, d.sales_order as sales_order
			FROM
				payment p
				LEFT JOIN sales_detail d ON p.sales_state_seq = d.sales_state_seq
				LEFT JOIN sales_state s ON p.sales_state_seq = s.sales_state_seq
			ORDER BY payment_time
			)
		WHERE
			comp_seq = #{comp_seq}
			and payment_time between trunc(LAST_DAY(add_months(to_timestamp(#{board_regdate},'YYYY-MM-DD'),-4))+1) and trunc(LAST_DAY(add_months(to_timestamp(#{board_regdate},'YYYY-MM-DD'),-1))+1)
         GROUP BY
			to_char(payment_time, 'YYYY-MM')
		ORDER BY
			monthtime
	</select>
</mapper>
